/* src/styles.scss */

/* Import Angular Material theming APIs */
@use '@angular/material' as mat;

/* Import your generated theme tokens file.
   Adjust the path if necessary.
*/
@use './styles/green_theme-colors.scss' as hacker;

/* Import Google Fonts (Roboto) */
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap');

/*
  Apply the main Angular Material theme.
  This mixin creates CSS variables based on your color, typography, and density settings.
*/
html {
  color-scheme: light dark;
  @include mat.theme((
    color: mat.$violet-palette,
    typography: Roboto,
    density: 0
  ));

  /* Optionally include high contrast overrides.
     Here we pass 'color-scheme' so that both light and dark values are generated.
     You could also pass 'light' or 'dark' if you prefer to hard-code one.
  */
  @include hacker.high-contrast-overrides(color-scheme);
}

/*
  Set global background and text colors using theme tokens.
*/
body {
  background: var(--mat-sys-surface);
  color: var(--mat-sys-on-surface);
}

/*
  Override Mat Card styles.
  Here we adjust the cardâ€™s elevated container color so that it is slightly different from the background.
  All card override tokens (such as for shapes, typography, etc.) are available via the main module.
*/
:root {
  @include mat.card-overrides((
    elevated-container-color: var(--mat-sys-surface-container-high)
  ));
}

/*
  Override button hover styles.
  This rule forces a dark text color when hovering over buttons for improved readability.
*/
.mat-button,
.mat-raised-button,
.mat-stroked-button,
.mat-flat-button {
  &:hover {
    color: #000000;
  }
}

.mat-mdc-card-title
{
    margin-left:8px !important;
    margin-bottom:8px !important;
    margin-top: 4px !important;
}
